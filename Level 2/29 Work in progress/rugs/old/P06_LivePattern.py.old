#! /home/chris/anaconda3/bin/python

import re
import sys

import pyttsx3

# already done lines 1-66, restarted on line 67
# done lines: 1 - 92
# next line: 93

codes = {
    'd': "dark",
    'o': "orange",
    'p': "pink",
    'l': "lime",
    'b': "beige",
    'w': "white",
    'g': "green",
    'y': "yellow",
    't': "teal",
    'm': "mid",
    ' ': "-"
}

STATUS_FILE = "data/nextLine.txt"
FILENAME = "data/RugPattern"

statusFile = open(STATUS_FILE, "r")
start = int(statusFile.readline())
statusFile.close()

inFile = open(FILENAME, "r")
lines = inFile.readlines()
lines = "".join(lines)

ROWS = 320
COLS = 198

print(f"Starting on line number {start}")
# start = int(input("Enter starting line number: "))

for lineNumber in range(start, ROWS + 1):
    continuing = input("Continue (yes/no): ")
    if continuing == "no":
        statusFile = open(STATUS_FILE, "w")
        statusFile.writelines([f"{lineNumber}"])
        statusFile.close()
        sys.exit()

    print(f"Line Number: {lineNumber}")
    pattern = "{lineNumber:0>3}.*\\n.*\\n.*\\n".format(lineNumber=lineNumber)
    pattern = re.compile(pattern)

    match = pattern.search(lines, re.MULTILINE)
    line = match.group()
    line = line[4:]
    line = re.sub("[\n]", "", line)
    line = re.sub("[ ]+", " ", line)

    BATCH = 3
    halfWay = 1 + len(line) // 2
    for batch in range(0, len(line), BATCH):
        input("\n<")
        print(f"{line[batch:batch + BATCH]}", flush=True)
        # print(f"{lineNumber}: {line[:batch+BATCH]}", flush=True)
        # print(f"X:  {line}")
        if batch > halfWay:
            print(f"{lineNumber}: {line[:halfWay]}", flush=True)
            print(f"{lineNumber}:{line[halfWay:batch + BATCH]}", flush=True)
        else:
            print(f"{lineNumber}: {line[:batch + BATCH]}", flush=True)
        engine = pyttsx3.init()
        engine.setProperty('rate', 150)

        for c in line[batch:batch + BATCH]:
            color = codes[c]
            engine.say(color)
        engine.runAndWait()
